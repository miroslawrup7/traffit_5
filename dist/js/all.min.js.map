{"version":3,"sources":["main.js"],"names":["recNumLoc","document","querySelector","noResultsLoc","resultsLoc","awardedResultsLoc","pagesContainer","pagesSwitchLoc","pageButtonsLoc","querySelectorAll","dropDownFilterLoc","dropDownLoc","dropDownBtnLoc","moreFiltersLoc","lessFiltersLoc","recordsOnPageLoc","branchesLoc","jobFormLoc","jobTypeLoc","langLoc","countriesLoc","citiesLoc","locationMarkLoc","locationDotLoc","locationSliderLoc","locationValuesLoc","displayValDistance","getElementById","salaryMarkLoc","salarySliderLoc","salaryValuesLoc","sliderOne","sliderTwo","displayValOne","displayValTwo","sliderTrack","pauseLoc","remoteLoc","relocationLoc","searchInputLoc","searchBtn","clearFiltersLoc","clearFilterLoc","salaryLoc","remoteWrapperLoc","relocationWrapperLoc","langWrapperLoc","closest","locWrapperLoc","brancheWrapperLoc","filteredRecordsArray_11","apiPage","rawAPIArray","allRecordsArray","filterBranchesList","filterJobFormList","filterJobTypeList","filterLangList","filterMinSalary","filterMaxSalary","filterCountriesList","recordsNumber","firstRecordNumber","recordsOnPage","filterListMaxHeight","filtersON","value","checked","disabled","setParentIframeHeight","iframeHeight","body","scrollHeight","window","parent","postMessage","today","Date","year","getFullYear","month","getMonth","slice","day","getDate","hour","getHours","minute","getMinutes","second","getSeconds","console","log","createDataForFilters","branche","jobForm","jobType","lang","visibleRate","salaryFrom","salaryTo","country","city","lati","longi","indexOf","undefined","filterConfigData","branche_filter","length","push","forEach","elem","language_filter","location_country_filter","findIndex","arr_el","location_city_filter","reworkData","el","options","job_location","parsedJobLocation","JSON","parse","url","name","advert","branches","language","job_type","parseInt","_Widoczna_stawka","_spodziewane_wynagrodzenie_od","_spodziewane_wynagrodzenie_do","remote","relocation","_relokacja","recruitmentType","_rekrutacja_rodzaj","_forma_zatrudnienia","locality","parseFloat","latitude","longitude","description","values","awarded","summariseDownload","innerText","classList","remove","add","showHideFilters","toggle","contains","style","maxHeight","String","setTimeout","hideFilter","dropDownBtnStart","addEventListener","pagesContainerStart","createRecordBoxes","recordsArray","replaceChildren","i","borderColorClass","textColorClass","recruitmentType_colorOnly","formaZatrudnienia","insertAdjacentHTML","filterAwarded","configFilterArray","awardedRecordsArray","property","findFlag","element","splice","createAwardedRecordBoxes","filter","remote_filter","recruitmentType_filter","getConfigFilter","fetch","async","readConfigFilter","rawData","json","createRecordsObjFromAPI","e","error","getAPI","mode","headers","loopOnAPI","jsonData","concat","setPages","createFilterLists","createFilteredRecordsArray","salary_visible","relocation_visible","language_visible","remote_visible","location_visible","branche_visible","isSamsungBrowser","navigator","userAgent","match","isChromeBrowser","sort","a","b","localeCompare","rowHeight","getMobileOperatingSystem","height","Object","keys","compare","key","reduce","accumulator","allCitiesObj","allCitiesArray","min","toString","max","slideOne","slideTwo","branchesChildrenLoc","jobFormChildrenLoc","jobTypeChildrenLoc","langChildrenLoc","countriesChildrenLoc","citiesChildrenLoc","filteredRecordsArray","selectedBranches","Array","from","selected","map","filteredRecordsArray_1","index","addFlag","selectedFiltr","selectedJobForms","filteredRecordsArray_2","selectedjobTypes","filteredRecordsArray_3","selectedLangs","selectedValOne","selectedValTwo","filteredRecordsArray_4","filteredRecordsArray_5","selectedCountry","filteredRecordsArray_6","selectedCity","filteredRecordsArray_7","min_lati","max_lati","min_longi","max_longi","selectedDistance","Math","cos","PI","filteredRecordsArray_8","filteredRecordsArray_9","filteredRecordsArray_10","searchText","position","field_id","toLowerCase","search","selectedRecruitmentType","slideDistance","textContent","target","activateCities","sel_el","find","minGap","zIndex","fillColor","percent1","percent2","background","changePage","pageBtn","firstRecord","lastRecord","globActivePageNo","movePrevPagesBtns","activePageNo","firstDispalyedPageNo","shift","lastDispalyedPageNo","pop","n","pagesQuantityCalc","moveNextPagesBtns","getWidth","scrollWidth","documentElement","offsetWidth","clientWidth","getHeight","offsetHeight","clientHeight","maxPageBtns","ceil","clearFilters","location","reload","vendor","opera","test","MSStream","elemFiltr","nextElementSibling","elOpt"],"mappings":"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","file":"all.min.js","sourcesContent":["const recNumLoc = document.querySelector(\".records-number\");\r\nconst noResultsLoc = document.querySelector(\".no-results\");\r\nconst resultsLoc = document.querySelector(\".results\");\r\nconst awardedResultsLoc = document.querySelector(\".awarded\");\r\nconst pagesContainer = document.querySelector(\".pages-container\");\r\nconst pagesSwitchLoc = document.querySelector(\".pages\");\r\nlet pageButtonsLoc = document.querySelectorAll(\".page\");\r\n\r\nconst dropDownFilterLoc = document.querySelector(\".drop-down-filters\");\r\nconst dropDownLoc = document.querySelector(\".drop-down-btn\");\r\nconst dropDownBtnLoc = document.querySelector(\".drop-down-btn img\");\r\nconst moreFiltersLoc = document.querySelector(\".more-filters\");\r\nconst lessFiltersLoc = document.querySelector(\".less-filters\");\r\n\r\nconst recordsOnPageLoc = document.querySelector(\".records-on-page\");\r\n\r\nconst branchesLoc = document.querySelector(\".branches\");\r\nconst jobFormLoc = document.querySelector(\".job-form\");\r\nconst jobTypeLoc = document.querySelector(\".job-type\");\r\nconst langLoc = document.querySelector(\".lang\");\r\nconst countriesLoc = document.querySelector(\".countries\");\r\nconst citiesLoc = document.querySelector(\".cities\");\r\n\r\nconst locationMarkLoc = document.querySelector(\"#localization\");\r\nconst locationDotLoc = document.querySelector(\"#loc-slider\");\r\nconst locationSliderLoc = document.querySelector(\r\n    \".distance-slider .slider-container .container\"\r\n);\r\nconst locationValuesLoc = document.querySelector(\r\n    \".distance-slider .slider-values\"\r\n);\r\nconst displayValDistance = document.getElementById(\"range3\");\r\n\r\nconst salaryMarkLoc = document.querySelector(\"#salary-mark\");\r\nconst salarySliderLoc = document.querySelector(\r\n    \".salary .slider-container .container\"\r\n);\r\nconst salaryValuesLoc = document.querySelector(\".salary .slider-values\");\r\nconst sliderOne = document.querySelector(\"#slider-1\");\r\nconst sliderTwo = document.querySelector(\"#slider-2\");\r\nconst displayValOne = document.getElementById(\"range1\");\r\nconst displayValTwo = document.getElementById(\"range2\");\r\nconst sliderTrack = document.querySelector(\".salary .slider-track\");\r\nconst pauseLoc = document.querySelector(\".salary .pause\");\r\n\r\nconst remoteLoc = document.querySelector(\"#remote\");\r\nconst relocationLoc = document.querySelector(\"#relocation\");\r\n\r\nconst searchInputLoc = document.querySelector(\".search-input input\");\r\n\r\nconst searchBtn = document.querySelector(\".search-btn\");\r\n\r\nconst clearFiltersLoc = document.querySelector(\".clear-filters\");\r\nconst clearFilterLoc = document.querySelectorAll(\".lists .list .clear-list\");\r\n\r\nconst salaryLoc = document.querySelector(\".salary\");\r\nconst remoteWrapperLoc = document.querySelector(\".remote-wrapper\");\r\nconst relocationWrapperLoc = document.querySelector(\".relocation-wrapper\");\r\nconst langWrapperLoc = document.querySelector(\"#lang\").closest(\"div\");\r\nconst locWrapperLoc = document.querySelector(\".loc-container\");\r\nconst brancheWrapperLoc = document.querySelector(\"#branches\").closest(\"div\");\r\n\r\nlet apiPage = 1;\r\nlet rawAPIArray = [];\r\nlet allRecordsArray = [];\r\n\r\nlet filterBranchesList = [];\r\nlet filterJobFormList = [];\r\nlet filterJobTypeList = [];\r\nlet filterLangList = [];\r\nlet filterMinSalary = 100000;\r\nlet filterMaxSalary = 0;\r\nlet filterCountriesList = {};\r\n\r\nlet recordsNumber = 0;\r\nlet firstRecordNumber = 0;\r\nlet recordsOnPage = 20;\r\n\r\nlet filterListMaxHeight = 0;\r\n\r\nlet filteredRecordsArray_11;\r\n\r\nlet filtersON = false;\r\n\r\nsearchInputLoc.value = \"\";\r\nrecordsOnPageLoc.value = 20;\r\n\r\nlocationMarkLoc.checked = false;\r\nlocationDotLoc.disabled = true;\r\ncountriesLoc.disabled = true;\r\ncitiesLoc.disabled = true;\r\nlocationDotLoc.value = 0;\r\n\r\nsalaryMarkLoc.checked = false;\r\nsliderOne.disabled = true;\r\nsliderTwo.disabled = true;\r\n\r\nremoteLoc.checked = false;\r\nrelocationLoc.checked = false;\r\n\r\n// Send data from iframe to parent ///////////////////////////////////////////\r\n\r\nconst setParentIframeHeight = () => {\r\n    const iframeHeight = document.body.scrollHeight\r\n    window.parent.postMessage(iframeHeight, \"*\");\r\n    \r\n    const today = new Date();  \r\n    const year = today.getFullYear();\r\n    const month = (\"0\" + (today.getMonth()+1)).slice(-2);\r\n    const day = (\"0\" + today.getDate()).slice(-2);\r\n    const hour = (\"0\" + today.getHours()).slice(-2);\r\n    const minute = (\"0\" + today.getMinutes()).slice(-2);\r\n    const second = (\"0\" + today.getSeconds()).slice(-2);\r\n    console.log(year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second);\r\n}\r\n\r\n// create FILTER DATA from API data ///////////////////////////////////////////////\r\nconst createDataForFilters = (\r\n    branche,\r\n    jobForm,\r\n    jobType,\r\n    lang,\r\n    visibleRate,\r\n    salaryFrom,\r\n    salaryTo,\r\n    country,\r\n    city,\r\n    lati,\r\n    longi\r\n) => {\r\n   \r\n    if (filterBranchesList.indexOf(branche) === -1 && branche !== undefined) {\r\n        if (filterConfigData.branche_filter.length) {\r\n            if (filterConfigData.branche_filter.indexOf(branche) !== -1) {\r\n                filterBranchesList.push(branche);\r\n            }\r\n        } else {\r\n            filterBranchesList.push(branche);\r\n        }\r\n       \r\n    }\r\n\r\n    if (jobForm) {\r\n        jobForm.forEach(function (elem) {\r\n            if (filterJobFormList.indexOf(elem) === -1) {\r\n                filterJobFormList.push(elem);\r\n            }\r\n        });\r\n    }\r\n\r\n    if (filterJobTypeList.indexOf(jobType) === -1 && jobType !== undefined) {\r\n        filterJobTypeList.push(jobType);\r\n    }\r\n\r\n    if (filterLangList.indexOf(lang) === -1) {\r\n\r\n        if (filterConfigData.language_filter.length) {\r\n            if (filterConfigData.language_filter.indexOf(lang) !== -1) {\r\n                filterLangList.push(lang);\r\n            }\r\n        } else {\r\n            filterLangList.push(lang);\r\n        }\r\n    }\r\n\r\n    if (visibleRate) {\r\n        if (salaryFrom < filterMinSalary) {\r\n            filterMinSalary = salaryFrom;\r\n        }\r\n        if (salaryTo > filterMaxSalary) {\r\n            filterMaxSalary = salaryTo;\r\n        }\r\n    }\r\n\r\n    if (filterConfigData.location_country_filter.length) {\r\n        \r\n        if (filterConfigData.location_country_filter.indexOf(country) !== -1) {\r\n            if (filterCountriesList[country]) {\r\n                if (\r\n                    filterCountriesList[country].findIndex(\r\n                        (arr_el) => arr_el.city === city\r\n                    ) === -1\r\n                ) {\r\n                    if (filterConfigData.location_city_filter.length) {\r\n                        if (filterConfigData.location_city_filter.indexOf(city) !== -1) {\r\n                            filterCountriesList[country].push({\r\n                                city: city,\r\n                                lati: lati,\r\n                                longi: longi,\r\n                            });\r\n                        }\r\n                    } else {\r\n                        filterCountriesList[country].push({\r\n                            city: city,\r\n                            lati: lati,\r\n                            longi: longi,\r\n                        });\r\n                    }\r\n                }\r\n            } else {\r\n                filterCountriesList[country] = [];\r\n                if (filterConfigData.location_city_filter.length) {\r\n                    if (filterConfigData.location_city_filter.indexOf(city) !== -1) {\r\n                        filterCountriesList[country].push({\r\n                            city: city,\r\n                            lati: lati,\r\n                            longi: longi,\r\n                        });\r\n                    }\r\n                } else {\r\n                    filterCountriesList[country].push({\r\n                        city: city,\r\n                        lati: lati,\r\n                        longi: longi,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n    } else {\r\n        \r\n        if (filterCountriesList[country]) {\r\n            if (\r\n                filterCountriesList[country].findIndex(\r\n                    (arr_el) => arr_el.city === city\r\n                ) === -1\r\n            ) {\r\n                filterCountriesList[country].push({\r\n                    city: city,\r\n                    lati: lati,\r\n                    longi: longi,\r\n                });\r\n            }\r\n        } else {\r\n            filterCountriesList[country] = [];\r\n            filterCountriesList[country].push({\r\n                city: city,\r\n                lati: lati,\r\n                longi: longi,\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\n// create OBJECTS ARRAY from Raw API JSON ///////////////////////////////////////////////\r\nconst reworkData = (rawAPIArray) => {\r\n    rawAPIArray.forEach((el) => {\r\n        if (el.options.job_location) {\r\n            parsedJobLocation = JSON.parse(el.options.job_location);\r\n        }\r\n\r\n        allRecordsArray.push({\r\n            url: el.url,\r\n            name: el.advert.name,\r\n            branche: el.options.branches,\r\n            lang: el.advert.language,\r\n            jobType: el.options.job_type,\r\n            visibleRate: parseInt(el.options._Widoczna_stawka),\r\n            salaryFrom: parseInt(el.options._spodziewane_wynagrodzenie_od),\r\n            salaryTo: parseInt(el.options._spodziewane_wynagrodzenie_do),\r\n            remote: el.options.remote,\r\n            relocation: el.options._relokacja,\r\n            recruitmentType: el.options._rekrutacja_rodzaj,\r\n            jobForm: el.options._forma_zatrudnienia,\r\n            country: parsedJobLocation.country,\r\n            city: parsedJobLocation.locality,\r\n            lati: parseFloat(parsedJobLocation.latitude),\r\n            longi: parseFloat(parsedJobLocation.longitude),\r\n            description: el.advert.values,\r\n            awarded: el.awarded,\r\n        });\r\n\r\n        createDataForFilters(\r\n            el.options.branches,\r\n            el.options._forma_zatrudnienia,\r\n            el.options.job_type,\r\n            el.advert.language,\r\n            parseInt(el.options._Widoczna_stawka),\r\n            parseInt(el.options._spodziewane_wynagrodzenie_od),\r\n            parseInt(el.options._spodziewane_wynagrodzenie_do),\r\n            parsedJobLocation.country,\r\n            parsedJobLocation.locality,\r\n            parseFloat(parsedJobLocation.latitude),\r\n            parseFloat(parsedJobLocation.longitude)\r\n        );\r\n    });\r\n};\r\n\r\n// show RECORDS NUMBER ///////////////////////////////////////////////\r\nconst summariseDownload = (recordsNumber) => {\r\n    recNumLoc.innerText = `Znaleziono ${recordsNumber} ogłoszeń`;\r\n    if (!recordsNumber) {\r\n        noResultsLoc.classList.add(\"active\");\r\n    } else {\r\n        noResultsLoc.classList.remove(\"active\");\r\n    }\r\n};\r\n\r\n// show & hide MORE FILTERS //////////////////////////////////////////////////\r\nconst showHideFilters = () => {\r\n    dropDownBtnLoc.classList.toggle(\"up\");\r\n    if (dropDownFilterLoc.classList.contains(\"show\")) {\r\n        dropDownFilterLoc.classList.remove(\"show\");\r\n        dropDownFilterLoc.style.maxHeight = String(0) + \"px\";\r\n        moreFiltersLoc.classList.remove(\"hide\");\r\n        lessFiltersLoc.classList.remove(\"show\");\r\n        setTimeout(setParentIframeHeight, 1000);\r\n    } else {\r\n        dropDownFilterLoc.classList.add(\"show\");\r\n        dropDownFilterLoc.style.maxHeight = \"1000px\";\r\n        moreFiltersLoc.classList.add(\"hide\");\r\n        lessFiltersLoc.classList.add(\"show\");\r\n        setTimeout(setParentIframeHeight, 1000);\r\n    }\r\n   \r\n};\r\n\r\nconst hideFilter = () => {\r\n    if (dropDownFilterLoc.classList.contains(\"show\")) {\r\n        dropDownBtnLoc.classList.toggle(\"up\");\r\n        dropDownFilterLoc.classList.remove(\"show\");\r\n        dropDownFilterLoc.style.maxHeight = String(0) + \"px\";\r\n        moreFiltersLoc.classList.remove(\"hide\");\r\n        lessFiltersLoc.classList.remove(\"show\");\r\n    }\r\n};\r\n\r\nconst dropDownBtnStart = () => {\r\n    dropDownLoc.addEventListener(\"click\", showHideFilters);\r\n\r\n    dropDownLoc.classList.add(\"active\");\r\n};\r\n\r\nconst pagesContainerStart = () => {\r\n    pagesContainer.classList.add(\"active\");\r\n};\r\n\r\n// create RECORDS BOXES ///////////////////////////////////////////////\r\nconst createRecordBoxes = (recordsArray, firstRecordNumber, recordsOnPage) => {\r\n    resultsLoc.replaceChildren();\r\n\r\n    for (i = firstRecordNumber; i < recordsOnPage; i++) {\r\n        // colouring of records by type of recruitment\r\n\r\n        if (recordsArray[i]) {\r\n            let borderColorClass = \"\";\r\n            let textColorClass = \"\";\r\n\r\n            if (!filterConfigData.recruitmentType_colorOnly.length) {\r\n                if (recordsArray[i].recruitmentType === \"PT\") {\r\n                    borderColorClass = \"pt-border\";\r\n                    textColorClass = \"pt-text\";\r\n                }\r\n                if (recordsArray[i].recruitmentType === \"RS\") {\r\n                    borderColorClass = \"rs-border\";\r\n                    textColorClass = \"rs-text\";\r\n                }\r\n                if (recordsArray[i].recruitmentType === \"WEW\") {\r\n                    borderColorClass = \"wew-border\";\r\n                    textColorClass = \"wew-text\";\r\n                }\r\n            } else {\r\n                if (\r\n                    filterConfigData.recruitmentType_colorOnly.indexOf(\"PT\") !==\r\n                    -1\r\n                ) {\r\n                    if (recordsArray[i].recruitmentType === \"PT\") {\r\n                        borderColorClass = \"pt-border\";\r\n                        textColorClass = \"pt-text\";\r\n                    }\r\n                }\r\n\r\n                if (\r\n                    filterConfigData.recruitmentType_colorOnly.indexOf(\"RS\") !==\r\n                    -1\r\n                ) {\r\n                    if (recordsArray[i].recruitmentType === \"RS\") {\r\n                        borderColorClass = \"rs-border\";\r\n                        textColorClass = \"rs-text\";\r\n                    }\r\n                }\r\n\r\n                if (\r\n                    filterConfigData.recruitmentType_colorOnly.indexOf(\r\n                        \"WEW\"\r\n                    ) !== -1\r\n                ) {\r\n                    if (recordsArray[i].recruitmentType === \"WEW\") {\r\n                        borderColorClass = \"wew-border\";\r\n                        textColorClass = \"wew-text\";\r\n                    }\r\n                }\r\n            }\r\n\r\n            let formaZatrudnienia = \"\";\r\n\r\n            if (recordsArray[i].jobForm) {\r\n                recordsArray[i].jobForm.forEach(function (elem) {\r\n                    formaZatrudnienia =\r\n                        formaZatrudnienia + \"<p>\" + elem + \"</p>\";\r\n                });\r\n            }\r\n\r\n            resultsLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<a href=\"${\r\n                    recordsArray[i].url\r\n                }\" target=\"_blank\"><div class=\"result ${borderColorClass}\">\r\n            <div class=\"top\">\r\n              \r\n                    <div class=\"lang\"><p>${recordsArray[i].lang}</p></div>\r\n                    <div class=\"branche-name\">\r\n                        <div class=\"branche\">${\r\n                            recordsArray[i].branche\r\n                                ? recordsArray[i].branche\r\n                                : \"\"\r\n                        }</div>\r\n                        <div class=\"name ${textColorClass}\">${\r\n                    recordsArray[i].name\r\n                }</div>\r\n                   \r\n                </div>\r\n              \r\n            </div>\r\n\r\n            <div class=\"bottom\">\r\n                <div class=\"city-container\">\r\n                    <div class=\"city\"><img src=\"./img/location_dot.svg\">${\r\n                        recordsArray[i].city\r\n                    }</div>\r\n                    </div>\r\n                    <div class=\"details-container\">\r\n                    ${\r\n                        recordsArray[i].jobType\r\n                            ? \"<div class='jobtype'>\" +\r\n                              recordsArray[i].jobType +\r\n                              \"</div>\"\r\n                            : \"\"\r\n                    }\r\n                    ${\r\n                        recordsArray[i].visibleRate\r\n                            ? recordsArray[i].salaryFrom &&\r\n                              recordsArray[i].salaryTo\r\n                                ? \"<div class='salary'>\" +\r\n                                  recordsArray[i].salaryFrom +\r\n                                  \" - \" +\r\n                                  recordsArray[i].salaryTo +\r\n                                  \"</div>\"\r\n                                : \"\"\r\n                            : \"\"\r\n                    }\r\n                    ${\r\n                        recordsArray[i].remote\r\n                            ? \"<div class='remote'>zdalna</div>\"\r\n                            : \"\"\r\n                    }\r\n                    ${\r\n                        recordsArray[i].relocation\r\n                            ? \"<div class='relocation'>relocation</div>\"\r\n                            : \"\"\r\n                    }\r\n                    <div class=\"employmentform\">${formaZatrudnienia}</div>\r\n                    </div>\r\n                </div>\r\n                   \r\n                </div>\r\n          \r\n\r\n        </div></a>`\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\nconst filterAwarded = (configFilterArray, awardedRecordsArray, property) => {\r\n    \r\n    for (i = awardedRecordsArray.length-1; i>=0; i--) {\r\n\r\n        let findFlag = false;\r\n        configFilterArray.forEach((element)=>{\r\n          \r\n            if (awardedRecordsArray[i][property] === element) {\r\n                findFlag = true;\r\n            }\r\n        })\r\n\r\n        if (!findFlag) {\r\n            awardedRecordsArray.splice(i, 1)\r\n        }\r\n    }\r\n\r\n}\r\n\r\n// create AWARDED RECORDS BOXES ///////////////////////////////////////////////\r\nconst createAwardedRecordBoxes = (recordsArray, filterConfigData) => {\r\n\r\n    awardedResultsLoc.replaceChildren();\r\n\r\n    let awardedRecordsArray = recordsArray.filter((elem) => {\r\n        return elem.awarded;  \r\n    });\r\n\r\n    if (awardedRecordsArray.length > 0) {\r\n\r\n        if (filterConfigData.remote_filter) {\r\n            awardedRecordsArray = awardedRecordsArray.filter((elem) => {\r\n                return elem.remote;\r\n            });\r\n        }\r\n        \r\n        if (filterConfigData.language_filter.length > 0) {\r\n            filterAwarded(filterConfigData.language_filter, awardedRecordsArray, \"lang\");\r\n        }\r\n\r\n        if (filterConfigData.branche_filter.length > 0) {\r\n            filterAwarded(filterConfigData.branche_filter, awardedRecordsArray, \"branche\");\r\n        }\r\n\r\n        if (filterConfigData.location_country_filter.length > 0) {\r\n            filterAwarded(filterConfigData.location_country_filter, awardedRecordsArray, \"country\");\r\n        }\r\n\r\n        if (filterConfigData.location_city_filter.length > 0) {\r\n            filterAwarded(filterConfigData.location_city_filter, awardedRecordsArray, \"city\");\r\n        }\r\n\r\n        if (filterConfigData.recruitmentType_filter.length > 0) {\r\n            filterAwarded(filterConfigData.recruitmentType_filter, awardedRecordsArray, \"recruitmentType\");\r\n        }\r\n\r\n        for (i = firstRecordNumber; i < 10; i++) {\r\n            if (awardedRecordsArray[i]) {\r\n                let borderColorClass = \"\";\r\n                let textColorClass = \"\";\r\n\r\n                if (awardedRecordsArray[i].recruitmentType === \"PT\") {\r\n                    borderColorClass = \"pt-border\";\r\n                    textColorClass = \"pt-text\";\r\n                }\r\n                if (awardedRecordsArray[i].recruitmentType === \"RS\") {\r\n                    borderColorClass = \"rs-border\";\r\n                    textColorClass = \"rs-text\";\r\n                }\r\n                if (awardedRecordsArray[i].recruitmentType === \"WEW\") {\r\n                    borderColorClass = \"wew-border\";\r\n                    textColorClass = \"wew-text\";\r\n                }\r\n\r\n                let formaZatrudnienia = \"\";\r\n\r\n                if (awardedRecordsArray[i].jobForm) {\r\n                    awardedRecordsArray[i].jobForm.forEach(function (elem) {\r\n                        formaZatrudnienia =\r\n                            formaZatrudnienia + \"<p>\" + elem + \"</p>\";\r\n                    });\r\n                }\r\n\r\n                awardedResultsLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<a href=\"${\r\n                        awardedRecordsArray[i].url\r\n                    }\" target=\"_blank\"><div class=\"result ${borderColorClass}\">\r\n                <div class=\"top\">\r\n                \r\n                        <div class=\"lang\">\r\n                            <p>${awardedRecordsArray[i].lang}</p>\r\n                        </div>\r\n                        <div class=\"branche-name\">\r\n                            <div class=\"branche\">${\r\n                                awardedRecordsArray[i].branche\r\n                                    ? awardedRecordsArray[i].branche\r\n                                    : \"\"\r\n                            }</div>\r\n                            <div class=\"name ${textColorClass}\">${\r\n                        awardedRecordsArray[i].name\r\n                    }</div>\r\n                        </div>\r\n                    \r\n                </div>\r\n\r\n                <div class=\"bottom\">\r\n                    <div class=\"city-container\">\r\n                        <div class=\"city\"><img src=\"./img/location_dot.svg\">${\r\n                            awardedRecordsArray[i].city\r\n                        }</div></div>\r\n                        <div class=\"details-container\">\r\n                        ${\r\n                            awardedRecordsArray[i].remote\r\n                                ? \"<div class='remote'>zdalna</div>\"\r\n                                : \"\"\r\n                        }\r\n                        ${\r\n                            awardedRecordsArray[i].relocation\r\n                                ? \"<div class='relocation'>relocation</div>\"\r\n                                : \"\"\r\n                        }\r\n                        ${\r\n                            awardedRecordsArray[i].jobType\r\n                                ? \"<div class='jobtype'>\" +\r\n                                awardedRecordsArray[i].jobType +\r\n                                \"</div>\"\r\n                                : \"\"\r\n                        }\r\n                        ${\r\n                            awardedRecordsArray[i].visibleRate\r\n                                ? awardedRecordsArray[i].salaryFrom &&\r\n                                awardedRecordsArray[i].salaryTo\r\n                                    ? \"<div class='salary'>\" +\r\n                                    awardedRecordsArray[i].salaryFrom +\r\n                                    \" - \" +\r\n                                    awardedRecordsArray[i].salaryTo +\r\n                                    \"</div>\"\r\n                                    : \"\"\r\n                                : \"\"\r\n                        }\r\n                        <div class=\"employmentform\">${formaZatrudnienia}</div>\r\n                        </div>\r\n                    \r\n                </div>\r\n\r\n                <div class=\"ribbon-wrap\">\r\n                        <div class=\"ribbon\">\r\n                                <img src=\"./img/star.svg\" alt=\"\">\r\n                                <img src=\"./img/star.svg\" alt=\"\">\r\n                                <img src=\"./img/star.svg\" alt=\"\">\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n\r\n                \r\n\r\n            </div></a>`\r\n                );\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nlet filterConfigData = {};\r\n\r\n// consider configuration filters ////////////////////////\r\nconst getConfigFilter = () => {\r\n    const response = fetch(\"./config/config.json\");\r\n    return response;\r\n};\r\n\r\nasync function readConfigFilter() {\r\n    try {\r\n        const rawData = await getConfigFilter();\r\n        filterConfigData = await rawData.json();\r\n        createRecordsObjFromAPI(apiPage, filterConfigData);\r\n    } catch (e) {\r\n        console.error(e);\r\n        createRecordsObjFromAPI(apiPage);\r\n    }\r\n}\r\n\r\nreadConfigFilter();\r\n\r\n// gets DATA FROM API ///////////////////////////////////////////////\r\nconst getAPI = (apiPage) => {\r\n    const response = fetch(\r\n        \"https://grupaprogres.traffit.com/public/job_posts/published\", // deactivate in local mode\r\n        //\"response.json\" // activate in local mode\r\n        {\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"X-Request-Page-Size\": \"100\",\r\n                \"X-Request-Current-Page\": apiPage,\r\n                \"X-Request-Sort\": '{\"sort_by\": \"id\", \"direction\": \"ASC\"}',\r\n            },\r\n        }\r\n    );\r\n\r\n    return response;\r\n};\r\n\r\nconst loopOnAPI = (jsonData, filterConfigData) => {\r\n    if (jsonData.length > 0) {\r\n        // deactivate in local mode\r\n        rawAPIArray = rawAPIArray.concat(jsonData); // deactivate in local mode\r\n        // rawAPIArray = jsonData; // activate in local mode\r\n        apiPage++; // deactivate in local mode\r\n        createRecordsObjFromAPI(apiPage, filterConfigData); // deactivate in local mode\r\n    } else {\r\n        // deactivate in local mode\r\n        reworkData(rawAPIArray);\r\n        recordsNumber = rawAPIArray.length;\r\n        summariseDownload(recordsNumber);\r\n        // createRecordBoxes(allRecordsArray, firstRecordNumber, recordsOnPage);\r\n        createAwardedRecordBoxes(allRecordsArray, filterConfigData);\r\n        setPages(recordsNumber);\r\n        createFilterLists(filterConfigData);\r\n        dropDownBtnStart();\r\n        pagesContainerStart();\r\n        createFilteredRecordsArray();\r\n    } // deactivate in local mode\r\n};\r\n\r\nasync function createRecordsObjFromAPI(apiPage, filterConfigData) {\r\n    const rawData = await getAPI(apiPage);\r\n    const jsonData = await rawData.json();\r\n    loopOnAPI(jsonData, filterConfigData);\r\n}\r\n\r\n// create HTML FILTERS LISTS //////////////////////////////////////////////////////\r\nconst createFilterLists = (filterConfigData) => {\r\n    // include external filter config ///////////////////\r\n\r\n    if (!filterConfigData.salary_visible) {\r\n        salaryLoc.classList.add(\"unactive\");\r\n    }\r\n\r\n    if (!filterConfigData.relocation_visible) {\r\n        relocationWrapperLoc.classList.add(\"unactive\");\r\n    }\r\n\r\n    if (!filterConfigData.language_visible) {\r\n        langWrapperLoc.classList.add(\"unactive\");\r\n    }\r\n\r\n    if (!filterConfigData.remote_visible) {\r\n        remoteWrapperLoc.classList.add(\"unactive\");\r\n    }\r\n\r\n    if (!filterConfigData.location_visible) {\r\n        locWrapperLoc.classList.add(\"unactive\");\r\n    }\r\n\r\n    if (!filterConfigData.branche_visible) {\r\n        brancheWrapperLoc.classList.add(\"unactive\");\r\n    }\r\n\r\n    let isSamsungBrowser = navigator.userAgent.match(/SamsungBrowser/i);\r\n    let isChromeBrowser = navigator.userAgent.match(/Chrome/i);\r\n\r\n    if (filterBranchesList.length > 0) {\r\n        filterBranchesList.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n        rowHeight = filterBranchesList.length * 21 + 3;\r\n        filterListMaxHeight = rowHeight;\r\n        if (getMobileOperatingSystem() === \"unknown\") {\r\n            branchesLoc.style.height = String(rowHeight) + \"px\";\r\n        } else if (isSamsungBrowser || isChromeBrowser) {\r\n            branchesLoc.style.height = \"50px\";\r\n        } else {\r\n            branchesLoc.style.height = String(rowHeight) + \"px\";\r\n        }\r\n        filterBranchesList.forEach(function (el) {\r\n            branchesLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<option value=\"${el}\">${el}</option>`\r\n            );\r\n        });\r\n    }\r\n\r\n    if (filterJobFormList.length > 0) {\r\n        filterJobFormList.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n        rowHeight = filterJobFormList.length * 21 + 3;\r\n        if (getMobileOperatingSystem() === \"unknown\") {\r\n            jobFormLoc.style.height = String(rowHeight) + \"px\";\r\n        } else if (isSamsungBrowser || isChromeBrowser) {\r\n            jobFormLoc.style.height = \"50px\";\r\n        } else {\r\n            jobFormLoc.style.height = String(rowHeight) + \"px\";\r\n        }\r\n        filterJobFormList.forEach(function (el) {\r\n            jobFormLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<option value=\"${el}\">${el}</option>`\r\n            );\r\n        });\r\n    }\r\n\r\n    if (filterJobTypeList.length > 0) {\r\n        filterJobTypeList.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n        rowHeight = filterJobTypeList.length * 21 + 3;\r\n        if (getMobileOperatingSystem() === \"unknown\") {\r\n            jobTypeLoc.style.height = String(rowHeight) + \"px\";\r\n        } else if (isSamsungBrowser || isChromeBrowser) {\r\n            jobTypeLoc.style.height = \"50px\";\r\n        } else {\r\n            jobTypeLoc.style.height = String(rowHeight) + \"px\";\r\n        }\r\n        filterJobTypeList.forEach(function (el) {\r\n            jobTypeLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<option value=\"${el}\">${el}</option>`\r\n            );\r\n        });\r\n    }\r\n\r\n    if (filterLangList.length > 0) {\r\n        filterLangList.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n        rowHeight = filterLangList.length * 21 + 3;\r\n        if (getMobileOperatingSystem() === \"unknown\") {\r\n            langLoc.style.height = String(rowHeight) + \"px\";\r\n        } else if (isSamsungBrowser || isChromeBrowser) {\r\n            langLoc.style.height = \"50px\";\r\n        } else {\r\n            langLoc.style.height = String(rowHeight) + \"px\";\r\n        }\r\n        filterLangList.forEach(function (el) {\r\n            langLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<option value=\"${el}\">${el}</option>`\r\n            );\r\n        });\r\n    }\r\n\r\n    if (Object.keys(filterCountriesList).length > 0) {\r\n        countriesLoc.insertAdjacentHTML(\r\n            \"beforeend\",\r\n            `<option value=\"\" class=\"placeholder\">Państwo</option>`\r\n        );\r\n\r\n        citiesLoc.insertAdjacentHTML(\r\n            \"beforeend\",\r\n            `<option value=\"\" class=\"placeholder\">Miasto</option>`\r\n        );\r\n\r\n        function compare(a, b) {\r\n            return a.city.localeCompare(b.city);\r\n        }\r\n\r\n        for (let key in filterCountriesList) {\r\n            filterCountriesList[key].sort(compare);\r\n        }\r\n\r\n        filterCountriesList = Object.keys(filterCountriesList)\r\n            .sort()\r\n            .reduce((accumulator, key) => {\r\n                accumulator[key] = filterCountriesList[key];\r\n                return accumulator;\r\n            }, {});\r\n\r\n        let allCitiesObj = [];\r\n        for (let key in filterCountriesList) {\r\n            countriesLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<option value=\"${key}\">${key}</option>`\r\n            );\r\n            allCitiesObj = allCitiesObj.concat(filterCountriesList[key]);\r\n        }\r\n\r\n        let allCitiesArray = [];\r\n        allCitiesObj.forEach((el) => {\r\n            allCitiesArray.push(el.city);\r\n        });\r\n\r\n        allCitiesArray.sort(function (a, b) {\r\n            return a.localeCompare(b);\r\n        });\r\n\r\n        allCitiesArray.forEach(function (el) {\r\n            citiesLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<option value=\"${el}\" class=\"active\">${el} </option>`\r\n            );\r\n        });\r\n    }\r\n\r\n    sliderOne.min = filterMinSalary.toString();\r\n    sliderTwo.min = filterMinSalary.toString();\r\n    sliderOne.max = filterMaxSalary.toString();\r\n    sliderTwo.max = filterMaxSalary.toString();\r\n    sliderOne.value = filterMinSalary.toString();\r\n    sliderTwo.value = filterMaxSalary.toString();\r\n    slideOne();\r\n    slideTwo();\r\n};\r\n\r\n// filter the data to create FILTERED OBJECTS ARRAY ///////////////////////////////\r\nconst createFilteredRecordsArray = () => {\r\n    const branchesChildrenLoc = document.querySelectorAll(\".branches option\");\r\n    const jobFormChildrenLoc = document.querySelectorAll(\".job-form option\");\r\n    const jobTypeChildrenLoc = document.querySelectorAll(\".job-type option\");\r\n    const langChildrenLoc = document.querySelectorAll(\".lang option\");\r\n    const countriesChildrenLoc = document.querySelectorAll(\".countries option\");\r\n    const citiesChildrenLoc = document.querySelectorAll(\".cities option\");\r\n\r\n    let filteredRecordsArray = allRecordsArray;\r\n\r\n    // selectedBranches ////////////////\r\n\r\n    let selectedBranches = [];\r\n\r\n    if (\r\n        filterConfigData.branche_filter.length \r\n        // && !filterConfigData.branche_visible\r\n    ) {\r\n        selectedBranches = filterConfigData.branche_filter;\r\n    } else {\r\n        selectedBranches = Array.from(branchesChildrenLoc)\r\n            .filter(function (elem) {\r\n                return elem.selected;\r\n            })\r\n            .map(function (elem) {\r\n                return elem.value;\r\n            });\r\n    }\r\n\r\n    let filteredRecordsArray_1 = [];\r\n\r\n    if (selectedBranches.length !== 0) {\r\n        filteredRecordsArray.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            selectedBranches.forEach((selectedFiltr) => {\r\n                if (el.branche === selectedFiltr) {\r\n                    addFlag = true;\r\n                }\r\n            });\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_1.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_1 = filteredRecordsArray;\r\n    }\r\n\r\n    // selectedJobForms ////////////////\r\n\r\n    let selectedJobForms = Array.from(jobFormChildrenLoc)\r\n        .filter(function (elem) {\r\n            return elem.selected;\r\n        })\r\n        .map(function (elem) {\r\n            return elem.value;\r\n        });\r\n\r\n    let filteredRecordsArray_2 = [];\r\n\r\n    if (selectedJobForms.length !== 0) {\r\n        filteredRecordsArray_1.forEach((el, index) => {\r\n            if (el.jobForm) {\r\n                let addFlag = false;\r\n\r\n                selectedJobForms.forEach((selectedFiltr) => {\r\n                    if (el.jobForm.indexOf(selectedFiltr) !== -1) {\r\n                        addFlag = true;\r\n                    }\r\n                });\r\n\r\n                if (addFlag) {\r\n                    filteredRecordsArray_2.push(el);\r\n                }\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_2 = filteredRecordsArray_1;\r\n    }\r\n\r\n    // selectedJobTypes////////////////\r\n\r\n    let selectedjobTypes = Array.from(jobTypeChildrenLoc)\r\n        .filter(function (elem) {\r\n            return elem.selected;\r\n        })\r\n        .map(function (elem) {\r\n            return elem.value;\r\n        });\r\n\r\n    let filteredRecordsArray_3 = [];\r\n\r\n    if (selectedjobTypes.length !== 0) {\r\n        filteredRecordsArray_2.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            selectedjobTypes.forEach((selectedFiltr) => {\r\n                if (el.jobType === selectedFiltr) {\r\n                    addFlag = true;\r\n                }\r\n            });\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_3.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_3 = filteredRecordsArray_2;\r\n    }\r\n\r\n    // selectedLangs ////////////////\r\n    let selectedLangs = [];\r\n\r\n    if (\r\n        filterConfigData.language_filter.length \r\n        // && !filterConfigData.language_visible\r\n    ) {\r\n        selectedLangs = filterConfigData.language_filter;\r\n    } else {\r\n        selectedLangs = Array.from(langChildrenLoc)\r\n            .filter(function (elem) {\r\n                return elem.selected;\r\n            })\r\n            .map(function (elem) {\r\n                return elem.value;\r\n            });\r\n    }\r\n\r\n    let filteredRecordsArray_4 = [];\r\n\r\n    if (selectedLangs.length !== 0) {\r\n        filteredRecordsArray_3.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            selectedLangs.forEach((selectedFiltr) => {\r\n                if (el.lang === selectedFiltr) {\r\n                    addFlag = true;\r\n                }\r\n            });\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_4.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_4 = filteredRecordsArray_3;\r\n    }\r\n\r\n    // selectedSalary ////////////////\r\n\r\n    let selectedValOne;\r\n    let selectedValTwo;\r\n    if (salaryMarkLoc.checked) {\r\n        selectedValOne = parseInt(displayValOne.innerText);\r\n        selectedValTwo = parseInt(displayValTwo.innerText);\r\n    }\r\n\r\n    let filteredRecordsArray_5 = [];\r\n\r\n    if (salaryMarkLoc.checked) {\r\n        filteredRecordsArray_4.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            if (el.visibleRate) {\r\n                if (el.salaryTo && el.salaryFrom) {\r\n                    if (\r\n                        el.salaryTo >= selectedValOne &&\r\n                        el.salaryFrom <= selectedValTwo\r\n                    ) {\r\n                        addFlag = true;\r\n                    }\r\n                }\r\n                if (el.salaryTo && !el.salaryFrom) {\r\n                    if (el.salaryTo >= selectedValOne) {\r\n                        addFlag = true;\r\n                    }\r\n                }\r\n                if (!el.salaryTo && el.salaryFrom) {\r\n                    if (el.salaryFrom <= selectedValTwo) {\r\n                        addFlag = true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_5.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_5 = filteredRecordsArray_4;\r\n    }\r\n\r\n    // selectedCountry ////////////////\r\n\r\n    let selectedCountry = [];\r\n\r\n    if (\r\n        filterConfigData.location_country_filter.length \r\n        // && !filterConfigData.location_visible\r\n    ) {\r\n        selectedCountry = filterConfigData.location_country_filter;\r\n    } else {\r\n        if (locationMarkLoc.checked) {\r\n            selectedCountry = Array.from(countriesChildrenLoc)\r\n                .filter(function (elem) {\r\n                    if (elem.value) {\r\n                        return elem.selected;\r\n                    }\r\n                })\r\n                .map(function (elem) {\r\n                    if (elem.value) {\r\n                        return elem.value;\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    let filteredRecordsArray_6 = [];\r\n\r\n    if (\r\n        locationMarkLoc.checked ||\r\n        (filterConfigData.location_country_filter.length \r\n            // && !filterConfigData.location_visible\r\n            )\r\n    ) {\r\n        if (selectedCountry.length) {\r\n            filteredRecordsArray_5.forEach((el, index) => {\r\n                let addFlag = false;\r\n\r\n                selectedCountry.forEach((selectedFiltr) => {\r\n                    if (el.country === selectedFiltr) {\r\n                        addFlag = true;\r\n                    }\r\n                });\r\n\r\n                if (addFlag) {\r\n                    filteredRecordsArray_6.push(el);\r\n                }\r\n            });\r\n        } else {\r\n            filteredRecordsArray_6 = filteredRecordsArray_5;\r\n        }\r\n    } else {\r\n        filteredRecordsArray_6 = filteredRecordsArray_5;\r\n    }\r\n\r\n    // selectedCity & selectedDistance ////////////////\r\n\r\n    let selectedCity = [];\r\n\r\n    if (\r\n        filterConfigData.location_city_filter.length\r\n        // && !filterConfigData.location_visible\r\n    ) {\r\n        selectedCity = filterConfigData.location_city_filter;\r\n    } else {\r\n        if (locationMarkLoc.checked) {\r\n            selectedCity = Array.from(citiesChildrenLoc)\r\n                .filter(function (elem) {\r\n                    if (elem.value) {\r\n                        return elem.selected;\r\n                    }\r\n                })\r\n                .map(function (elem) {\r\n                    if (elem.value) {\r\n                        return elem.value;\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    let filteredRecordsArray_7 = [];\r\n\r\n    if (\r\n        locationMarkLoc.checked ||\r\n        (filterConfigData.location_city_filter.length \r\n            // && !filterConfigData.location_visible\r\n            )\r\n    ) {\r\n        if (selectedCity.length) {\r\n            let selectedDistance = 0;\r\n\r\n            selectedDistance = parseInt(locationDotLoc.value);\r\n\r\n            let lati;\r\n            let longi;\r\n            let min_lati;\r\n            let max_lati;\r\n            let min_longi;\r\n            let max_longi;\r\n\r\n            filteredRecordsArray_6.forEach((el, index) => {\r\n                if (el.city === selectedCity[0]) {\r\n                    lati = el.lati;\r\n                    longi = el.longi;\r\n\r\n                    min_lati = lati - selectedDistance * 0.009044;\r\n                    max_lati = lati + selectedDistance * 0.009044;\r\n                    min_longi =\r\n                        longi -\r\n                        (selectedDistance * 0.0089831) /\r\n                            Math.cos((lati * Math.PI) / 180);\r\n                    max_longi =\r\n                        longi +\r\n                        (selectedDistance * 0.0089831) /\r\n                            Math.cos((lati * Math.PI) / 180);\r\n                }\r\n            });\r\n\r\n            filteredRecordsArray_6.forEach((el, index) => {\r\n                let addFlag = false;\r\n\r\n                if (\r\n                    el.lati <= max_lati &&\r\n                    el.lati >= min_lati &&\r\n                    el.longi <= max_longi &&\r\n                    el.longi >= min_longi\r\n                ) {\r\n                    addFlag = true;\r\n                }\r\n\r\n                if (addFlag) {\r\n                    filteredRecordsArray_7.push(el);\r\n                }\r\n            });\r\n        } else {\r\n            filteredRecordsArray_7 = filteredRecordsArray_6;\r\n        }\r\n    } else {\r\n        filteredRecordsArray_7 = filteredRecordsArray_6;\r\n    }\r\n\r\n    // selectedRemote ////////////////\r\n\r\n    let filteredRecordsArray_8 = [];\r\n\r\n    if (\r\n        remoteLoc.checked ||\r\n        (filterConfigData.remote_filter \r\n            // && !filterConfigData.remote_visible\r\n            )\r\n    ) {\r\n        filteredRecordsArray_7.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            if (el.remote) {\r\n                addFlag = true;\r\n            }\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_8.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_8 = filteredRecordsArray_7;\r\n    }\r\n\r\n    // selectedRelocation ////////////////\r\n\r\n    let filteredRecordsArray_9 = [];\r\n\r\n    if (relocationLoc.checked) {\r\n        filteredRecordsArray_8.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            if (el.relocation) {\r\n                addFlag = true;\r\n            }\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_9.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_9 = filteredRecordsArray_8;\r\n    }\r\n\r\n    // searchText ////////////////\r\n\r\n    let filteredRecordsArray_10 = [];\r\n\r\n    let searchText = searchInputLoc.value;\r\n\r\n    if (searchText) {\r\n        filteredRecordsArray_9.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            let position;\r\n\r\n            el.description.forEach(function (elem) {\r\n                if (elem.value && elem.field_id !== \"geolocation\") {\r\n                    position = elem.value\r\n                        .toLowerCase()\r\n                        .search(searchText.toLowerCase());\r\n                    if (position !== -1) {\r\n                        addFlag = true;\r\n                    }\r\n                }\r\n            });\r\n\r\n            position = el.name.toLowerCase().search(searchText.toLowerCase());\r\n            if (position !== -1) {\r\n                addFlag = true;\r\n            }\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_10.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_10 = filteredRecordsArray_9;\r\n    }\r\n\r\n    // selectedRecruitmentType (coloring of records) ////////////////\r\n    filteredRecordsArray_11 = [];\r\n    \r\n    let selectedRecruitmentType = [];\r\n\r\n    if (filterConfigData.recruitmentType_filter.length) {\r\n        selectedRecruitmentType = filterConfigData.recruitmentType_filter;\r\n    }\r\n\r\n    if (selectedRecruitmentType.length !== 0) {\r\n        filteredRecordsArray_10.forEach((el, index) => {\r\n            let addFlag = false;\r\n\r\n            selectedRecruitmentType.forEach((selectedFiltr) => {\r\n                if (el.recruitmentType === selectedFiltr) {\r\n                    addFlag = true;\r\n                }\r\n            });\r\n\r\n            if (addFlag) {\r\n                filteredRecordsArray_11.push(el);\r\n            }\r\n        });\r\n    } else {\r\n        filteredRecordsArray_11 = filteredRecordsArray_10;\r\n    }\r\n\r\n    recordsNumber = filteredRecordsArray_11.length;\r\n    summariseDownload(recordsNumber);\r\n    createRecordBoxes(filteredRecordsArray_11, 0, recordsOnPage);\r\n    setPages(recordsNumber);\r\n    filtersON = true;\r\n    hideFilter();\r\n    \r\n    setTimeout(setParentIframeHeight, 1000);\r\n    \r\n};\r\n\r\n// SEARCH LISTENER /////////////////////////////////////////////////////////////\r\nsearchBtn.addEventListener(\"click\", createFilteredRecordsArray);\r\n\r\n// COUNTRY & CITY LISTENER /////////////////////////////////////////////////////////////\r\nlocationMarkLoc.addEventListener(\"change\", function (e) {\r\n    if (e.target.checked) {\r\n        if (citiesLoc.value) {\r\n            locationSliderLoc.classList.remove(\"unactive\");\r\n            locationValuesLoc.classList.remove(\"unactive\");\r\n            locationDotLoc.disabled = false;\r\n        }\r\n\r\n        countriesLoc.disabled = false;\r\n        citiesLoc.disabled = false;\r\n    } else {\r\n        locationSliderLoc.classList.add(\"unactive\");\r\n        locationValuesLoc.classList.add(\"unactive\");\r\n        locationDotLoc.disabled = true;\r\n\r\n        countriesLoc.disabled = true;\r\n        citiesLoc.disabled = true;\r\n    }\r\n});\r\n\r\nfunction slideDistance() {\r\n    displayValDistance.textContent = locationDotLoc.value;\r\n}\r\n\r\nconst activateCities = () => {\r\n    citiesLoc.querySelectorAll(\"option\").forEach((el) => {\r\n        if (countriesLoc.value) {\r\n            if (\r\n                filterCountriesList[countriesLoc.value].findIndex(\r\n                    (sel_el) => sel_el.city === el.value\r\n                ) !== -1\r\n            ) {\r\n                el.classList.add(\"active\");\r\n            } else {\r\n                el.classList.remove(\"active\");\r\n            }\r\n        } else {\r\n            el.classList.add(\"active\");\r\n        }\r\n    });\r\n};\r\n\r\ncountriesLoc.addEventListener(\"change\", function () {\r\n    activateCities();\r\n\r\n    if (countriesLoc.value) {\r\n        if (\r\n            filterCountriesList[countriesLoc.value].find(\r\n                (el) => el.city !== citiesLoc.value\r\n            )\r\n        ) {\r\n            citiesLoc.value = filterCountriesList[countriesLoc.value][0].city;\r\n            locationSliderLoc.classList.remove(\"unactive\");\r\n            locationValuesLoc.classList.remove(\"unactive\");\r\n            locationDotLoc.disabled = false;\r\n        }\r\n    } else {\r\n        citiesLoc.value = citiesLoc[0].value;\r\n        locationSliderLoc.classList.add(\"unactive\");\r\n        locationValuesLoc.classList.add(\"unactive\");\r\n        locationDotLoc.disabled = true;\r\n    }\r\n});\r\n\r\ncitiesLoc.addEventListener(\"change\", function () {\r\n    Object.keys(filterCountriesList).find((key) => {\r\n        if (\r\n            filterCountriesList[key].findIndex(\r\n                (sel_el) => sel_el.city === citiesLoc.value\r\n            ) !== -1\r\n        ) {\r\n            if (countriesLoc.value !== key) {\r\n                countriesLoc.value = key;\r\n                activateCities();\r\n            }\r\n        }\r\n    });\r\n    if (!citiesLoc.value) {\r\n        locationSliderLoc.classList.add(\"unactive\");\r\n        locationValuesLoc.classList.add(\"unactive\");\r\n        locationDotLoc.disabled = true;\r\n    } else {\r\n        locationSliderLoc.classList.remove(\"unactive\");\r\n        locationValuesLoc.classList.remove(\"unactive\");\r\n        locationDotLoc.disabled = false;\r\n    }\r\n});\r\n\r\n// SALARY LISTENER ////////////////////////////////////////////////////////////////////\r\nlet minGap = 0;\r\n\r\nfunction slideOne() {\r\n    if (parseInt(sliderTwo.value) - parseInt(sliderOne.value) <= minGap) {\r\n        sliderOne.value = parseInt(sliderTwo.value) - minGap;\r\n    }\r\n    displayValOne.textContent = sliderOne.value;\r\n\r\n    if (sliderOne.value === sliderTwo.value) {\r\n        sliderOne.style.zIndex = \"1\";\r\n    } else {\r\n        sliderOne.style.zIndex = \"0\";\r\n    }\r\n\r\n    fillColor();\r\n}\r\n\r\nfunction slideTwo() {\r\n    if (parseInt(sliderTwo.value) - parseInt(sliderOne.value) <= minGap) {\r\n        sliderTwo.value = parseInt(sliderOne.value) + minGap;\r\n    }\r\n    displayValTwo.textContent = sliderTwo.value;\r\n    if (displayValTwo.textContent === \"100000\") {\r\n        salaryMarkLoc.disabled = true;\r\n        displayValOne.textContent = \"\";\r\n        displayValTwo.textContent = \"\";\r\n        pauseLoc.textContent = \"\";\r\n    }\r\n    fillColor();\r\n}\r\n\r\nfunction fillColor() {\r\n    percent1 =\r\n        ((sliderOne.value - sliderOne.min) / (sliderOne.max - sliderOne.min)) *\r\n        100;\r\n    percent2 =\r\n        ((sliderTwo.value - sliderOne.min) / (sliderOne.max - sliderOne.min)) *\r\n        100;\r\n    sliderTrack.style.background = `linear-gradient(to right, #dadae5 ${percent1}%, #fe7320ff ${percent1}%, #fe7320ff ${percent2}%, #dadae5 ${percent2}%)`;\r\n}\r\n\r\nsliderOne.value = filterMaxSalary.toString();\r\nsliderTwo.value = filterMinSalary.toString();\r\n\r\nsalaryMarkLoc.addEventListener(\"change\", function (e) {\r\n    if (e.target.checked) {\r\n        salarySliderLoc.classList.remove(\"unactive\");\r\n        salaryValuesLoc.classList.remove(\"unactive\");\r\n        sliderOne.disabled = false;\r\n        sliderTwo.disabled = false;\r\n    } else {\r\n        salarySliderLoc.classList.add(\"unactive\");\r\n        salaryValuesLoc.classList.add(\"unactive\");\r\n        sliderOne.disabled = true;\r\n        sliderTwo.disabled = true;\r\n    }\r\n});\r\n\r\n// PAGES /////////////////////////////////////////////////////////////\r\nconst changePage = (pageBtn) => {\r\n    pageButtonsLoc.forEach((el) => {\r\n        el.classList.remove(\"active\");\r\n    });\r\n    pageBtn.classList.add(\"active\");\r\n    let firstRecord =\r\n        recordsOnPage * parseInt(pageBtn.innerText) - recordsOnPage;\r\n    let lastRecord = recordsOnPage * parseInt(pageBtn.innerText);\r\n\r\n    filtersON\r\n        ? createRecordBoxes(filteredRecordsArray_11, firstRecord, lastRecord)\r\n        : createRecordBoxes(allRecordsArray, firstRecord, lastRecord);\r\n    globActivePageNo = parseInt(pageBtn.innerText);\r\n    setTimeout(setParentIframeHeight(), 500);\r\n};\r\n\r\nlet globActivePageNo;\r\n\r\nconst movePrevPagesBtns = () => {\r\n    let firstDispalyedPageNo = parseInt(\r\n        Array.from(document.querySelectorAll(\".page\")).shift().innerText\r\n    );\r\n    let lastDispalyedPageNo = parseInt(\r\n        Array.from(document.querySelectorAll(\".page\")).pop().innerText\r\n    );\r\n\r\n    let activePageNo;\r\n    activePageNo = document.querySelector(\".page.active\");\r\n\r\n    if (activePageNo) {\r\n        activePageNo = parseInt(activePageNo.innerText);\r\n    }\r\n\r\n    if (firstDispalyedPageNo > 1) {\r\n        pagesSwitchLoc.replaceChildren();\r\n\r\n        for (n = firstDispalyedPageNo - 1; n <= lastDispalyedPageNo - 1; n++) {\r\n            if (!activePageNo) {\r\n                activePageNo = globActivePageNo;\r\n            }\r\n            if (activePageNo && n === activePageNo) {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page active\">${n}</div>`\r\n                );\r\n            } else {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page\">${n}</div>`\r\n                );\r\n            }\r\n        }\r\n\r\n        if (lastDispalyedPageNo < pagesQuantityCalc + 1) {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<div class=\"next active\"><img src=\"./img/chevron-right.svg\" alt=\"\" /></div>`\r\n            );\r\n            let nextBtnLoc = document.querySelector(\".next\");\r\n            nextBtnLoc.addEventListener(\"click\", () => {\r\n                moveNextPagesBtns();\r\n            });\r\n        } else {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<div class=\"next\"><img src=\"\" alt=\"\" /></div>`\r\n            );\r\n        }\r\n\r\n        if (firstDispalyedPageNo > 2) {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"afterbegin\",\r\n                `<div class=\"prev active\"><img src=\"./img/chevron-left.svg\" alt=\"\" /></div>`\r\n            );\r\n            let prevBtnLoc = document.querySelector(\".prev\");\r\n            prevBtnLoc.addEventListener(\"click\", () => {\r\n                movePrevPagesBtns();\r\n            });\r\n        } else {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"afterbegin\",\r\n                `<div class=\"prev\"><img src=\"\" alt=\"\" /></div>`\r\n            );\r\n        }\r\n\r\n        pageButtonsLoc = document.querySelectorAll(\".page\");\r\n        pageButtonsLoc.forEach((el) => {\r\n            el.addEventListener(\"click\", (e) => {\r\n                changePage(e.target);\r\n            });\r\n        });\r\n    }\r\n};\r\n\r\nconst moveNextPagesBtns = () => {\r\n    let firstDispalyedPageNo = parseInt(\r\n        Array.from(document.querySelectorAll(\".page\")).shift().innerText\r\n    );\r\n    let lastDispalyedPageNo = parseInt(\r\n        Array.from(document.querySelectorAll(\".page\")).pop().innerText\r\n    );\r\n\r\n    let activePageNo;\r\n    activePageNo = document.querySelector(\".page.active\");\r\n    if (activePageNo) {\r\n        activePageNo = parseInt(activePageNo.innerText);\r\n        globActivePageNo = activePageNo;\r\n    }\r\n\r\n    if (lastDispalyedPageNo < pagesQuantityCalc) {\r\n        pagesSwitchLoc.replaceChildren();\r\n\r\n        for (n = firstDispalyedPageNo + 1; n <= lastDispalyedPageNo + 1; n++) {\r\n            if (!activePageNo) {\r\n                activePageNo = globActivePageNo;\r\n            }\r\n            if (activePageNo && n === activePageNo) {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page active\">${n}</div>`\r\n                );\r\n            } else {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page\">${n}</div>`\r\n                );\r\n            }\r\n        }\r\n\r\n        if (lastDispalyedPageNo < pagesQuantityCalc - 1) {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<div class=\"next active\"><img src=\"./img/chevron-right.svg\" alt=\"\" /></div>`\r\n            );\r\n            let nextBtnLoc = document.querySelector(\".next\");\r\n            nextBtnLoc.addEventListener(\"click\", () => {\r\n                moveNextPagesBtns();\r\n            });\r\n        } else {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<div class=\"next\"><img src=\"\" alt=\"\" /></div>`\r\n            );\r\n        }\r\n\r\n        if (firstDispalyedPageNo > 0) {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"afterbegin\",\r\n                `<div class=\"prev active\"><img src=\"./img/chevron-left.svg\" alt=\"\" /></div>`\r\n            );\r\n            let prevBtnLoc = document.querySelector(\".prev\");\r\n            prevBtnLoc.addEventListener(\"click\", () => {\r\n                movePrevPagesBtns();\r\n            });\r\n        } else {\r\n            pagesSwitchLoc.insertAdjacentHTML(\r\n                \"afterbegin\",\r\n                `<div class=\"prev\"><img src=\"\" alt=\"\" /></div>`\r\n            );\r\n        }\r\n\r\n        pageButtonsLoc = document.querySelectorAll(\".page\");\r\n        pageButtonsLoc.forEach((el) => {\r\n            el.addEventListener(\"click\", (e) => {\r\n                changePage(e.target);\r\n            });\r\n        });\r\n    }\r\n};\r\n\r\n// RWD /////////////////////////////////////////////////////////////\r\nfunction getWidth() {\r\n    return Math.max(\r\n        document.body.scrollWidth,\r\n        document.documentElement.scrollWidth,\r\n        document.body.offsetWidth,\r\n        document.documentElement.offsetWidth,\r\n        document.documentElement.clientWidth\r\n    );\r\n}\r\n\r\nfunction getHeight() {\r\n    return Math.max(\r\n        document.body.scrollHeight,\r\n        document.documentElement.scrollHeight,\r\n        document.body.offsetHeight,\r\n        document.documentElement.offsetHeight,\r\n        document.documentElement.clientHeight\r\n    );\r\n}\r\n\r\nlet maxPageBtns;\r\n\r\nif (getWidth() < 500) {\r\n    maxPageBtns = 6;\r\n}\r\nif (getWidth() >= 500 && getWidth() < 700) {\r\n    maxPageBtns = 8;\r\n}\r\nif (getWidth() > 700 && getWidth() < 900) {\r\n    maxPageBtns = 10;\r\n}\r\nif (getWidth() > 900 && getWidth() < 1024) {\r\n    maxPageBtns = 15;\r\n}\r\nif (getWidth() > 1024) {\r\n    maxPageBtns = 20;\r\n}\r\n\r\nlet pagesQuantityCalc;\r\n\r\nconst setPages = (recordsNumber) => {\r\n    pagesQuantityCalc = Math.ceil(recordsNumber / recordsOnPage);\r\n\r\n    if (pagesQuantityCalc > maxPageBtns) {\r\n        pagesSwitchLoc.replaceChildren();\r\n\r\n        for (n = 1; n <= maxPageBtns; n++) {\r\n            if (n === 1) {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page active\">${n}</div>`\r\n                );\r\n            } else {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page\">${n}</div>`\r\n                );\r\n            }\r\n        }\r\n        pagesSwitchLoc.insertAdjacentHTML(\r\n            \"beforeend\",\r\n            `<div class=\"next active\"><img src=\"./img/chevron-right.svg\" alt=\"\" /></div>`\r\n        );\r\n        let nextBtnLoc = document.querySelector(\".next\");\r\n        nextBtnLoc.addEventListener(\"click\", () => {\r\n            moveNextPagesBtns();\r\n        });\r\n    } else {\r\n        pagesSwitchLoc.replaceChildren();\r\n\r\n        for (n = 1; n <= pagesQuantityCalc; n++) {\r\n            if (n === 1) {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page active\">${n}</div>`\r\n                );\r\n            } else {\r\n                pagesSwitchLoc.insertAdjacentHTML(\r\n                    \"beforeend\",\r\n                    `<div class=\"page\">${n}</div>`\r\n                );\r\n            }\r\n        }\r\n\r\n        pagesSwitchLoc.insertAdjacentHTML(\r\n            \"beforeend\",\r\n            `<div class=\"next\"><img src=\"\" alt=\"\" /></div>`\r\n        );\r\n    }\r\n\r\n    pagesSwitchLoc.insertAdjacentHTML(\r\n        \"afterbegin\",\r\n        `<div class=\"prev\"><img src=\"\" alt=\"\" /></div>`\r\n    );\r\n\r\n    pageButtonsLoc = document.querySelectorAll(\".page\");\r\n    pageButtonsLoc.forEach((el) => {\r\n        el.addEventListener(\"click\", (e) => {\r\n            changePage(e.target);\r\n        });\r\n    });\r\n};\r\n\r\n// change RECORDS QUANTITY ON PAGE //////////////////////////////////////////////////\r\nrecordsOnPageLoc.addEventListener(\"change\", (e) => {\r\n    recordsOnPage = parseInt(e.target.value);\r\n\r\n    filtersON\r\n        ? createRecordBoxes(filteredRecordsArray_11, 0, recordsOnPage)\r\n        : createRecordBoxes(allRecordsArray, 0, recordsOnPage);\r\n    setPages(recordsNumber);\r\n\r\n    setParentIframeHeight();\r\n});\r\n\r\n\r\n// CLEAR FILTERS //////////////////////////////////////////////////\r\nconst clearFilters = () => {\r\n    searchInputLoc.value = \"\";\r\n    window.location.reload();\r\n};\r\n\r\nclearFiltersLoc.addEventListener(\"click\", clearFilters);\r\n\r\nclearFilterLoc.forEach((elemFiltr) => {\r\n    elemFiltr.addEventListener(\"click\", () => {\r\n        let optArray = elemFiltr.nextElementSibling.querySelectorAll(\"option\");\r\n        optArray.forEach((elOpt) => {\r\n            if (elOpt.selected) {\r\n                elOpt.selected = false;\r\n            }\r\n        });\r\n    });\r\n});\r\n\r\n// Determine the mobile operating system\r\nfunction getMobileOperatingSystem() {\r\n    var userAgent = navigator.userAgent || navigator.vendor || window.opera;\r\n\r\n    if (/android/i.test(userAgent)) {\r\n        return \"Android\";\r\n    }\r\n\r\n    if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\r\n        return \"iOS\";\r\n    }\r\n\r\n    return \"unknown\";\r\n}\r\n"]}